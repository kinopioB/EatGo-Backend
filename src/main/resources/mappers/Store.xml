<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="store">

	
	<resultMap id="StoreDetailMap" type="StoreDetailResponseDto">
		<result property="storeId" column="store_id"></result>
		<result property="storeName" column="store_name"></result>
		<result property="address" column="address"></result>
		<result property="positionX" column="position_x"></result>
		<result property="positionY" column="position_y"></result>
		<result property="thumbnail" column="thumbnail"></result>
		<result property="createdType" column="created_type"></result>
		<result property="createdAt" column="created_at"></result>
		
		<result property="userId" column="user_id"></result>
		<result property="userName" column="user_name"></result>
		
		<result property="categoryId" column="category_id"></result>
		<result property="categoryName" column="category_name"></result>
		
		<collection property="tags" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.store.entity.Tag" select="selectTagsByStoreId"></collection>		
		<collection property="openInfos" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.store.entity.OpenInfo" select="selectOpenInfoByStoreId"></collection>		
		<collection property="storeHistories" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.entity.StoreHistory" select="selectStoreHistoryByStoreId"></collection>
		<collection property="menus" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.store.entity.Menu" select="selectMenusByStoreId"></collection>		
		<collection property="reviews" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.store.dto.ReviewDto" select="selectReviewsByStoreId"></collection>		
	
	</resultMap>
  
  
  <resultMap id="summaryStoreResult" type="StoreResponseDto">
		<result column="store_id" property="storeId"></result>
		<result column="store_name" property="storeName"></result>
		<result column="address" property="address"></result>
		<result column="position_x" property="positionX"></result>
		<result column="position_y" property="positionY"></result>
		<result column="isopen" property="isOpen"></result>
		<result column="user_id" property="userId"></result>
		<result column="user_name" property="userName"></result>
		<result column="category_id" property="categoryId"></result>
		<result column="category_name" property="categoryName"></result>
		<collection property="tags" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.store.entity.Tag" select="selectTagsByStoreId"></collection>
		<collection property="openInfos" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.store.entity.OpenInfo" select="selectOpenInfoByStoreId"></collection>
	</resultMap>
	
	<resultMap id="MyPageStoreResult" type="StoreMyPageResponseDto">
		<result column="store_id" property="storeId"></result>
		<result column="store_name" property="storeName"></result>
		<result column="user_name" property="userName"></result>
		<result column="thumbnail" property="thumbnail"></result>
		<result column="category_id" property="categoryId"></result>
		<result column="category_name" property="categoryName"></result>
		<result column="isOpen" property="isOpen"></result>
		
		<collection property="tags" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.store.entity.Tag" select="selectTagsByStoreId"></collection>
		<collection property="reviews" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.store.dto.ReviewDto" select="selectReviewsByStoreId"></collection>		
	</resultMap>
	
	<resultMap id="TodayOpenStoreResult" type="TodayOpenStoreResponseDto">
		<result column="store_id" property="storeId"></result>
		<result column="store_name" property="storeName"></result>
		<result column="thumbnail" property="thumbnail"></result>
		<result column="info" property="info"></result>
		<result column="store_name" property="storeName"></result>
		<result column="category_id" property="categoryId"></result>
		<result column="category_name" property="categoryName"></result>
		
		<collection property="tags" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.store.entity.Tag" select="selectTagsByStoreId"></collection>
		
	</resultMap>
	
	<resultMap id="ModificationStoreResult" type="StoreModificationResponseDto">
		<result column="store_id" property="storeId"></result>
		<result column="store_name" property="storeName"></result>
		<result column="address" property="address"></result>
		<result column="position_x" property="positionX"></result>
		<result column="position_y" property="positionY"></result>
		<result column="isopen" property="isOpen"></result>
		<collection property="openInfos" column="store_id" javaType="java.util.List" ofType="com.kinopio.eatgo.store.entity.OpenInfo" select="selectOpenInfosForModification"></collection>
	</resultMap>
	
	<select id="selectStoreDetailById" parameterType="int" resultMap="StoreDetailMap">
		select * from store join app_user on store.user_id = app_user.user_id join category on store.category_id = category.category_id where store_id =#{storeId}
	</select>
	
	<select id="selectTagsByStoreId" parameterType="int" resultType="com.kinopio.eatgo.store.entity.Tag">
		select * from tag where store_id=#{storeId}
	</select>
	
	<select id="selectOpenInfoByStoreId" parameterType="int" resultType="com.kinopio.eatgo.store.entity.OpenInfo">
		select * from open_info where store_id=#{storeId}
	</select>

	<select id="selectStoreHistoryByStoreId" parameterType="int" resultType="com.kinopio.eatgo.store.entity.StoreHistory">
		select * from store_history where store_id=#{storeId} AND open_date >= TRUNC(SYSDATE) - 7
	</select>
	<select id="selectMenusByStoreId" parameterType="int" resultType="com.kinopio.eatgo.store.entity.Menu">
		select * from menu where store_id=#{storeId}
	</select>
	
	<select id="selectReviewsByStoreId" parameterType="int" resultType="ReviewDto">
		select * from review join app_user on review.user_id = app_user.user_id where store_id=#{storeId} 
	</select>

		
	<select id="selectAllStore" resultType="StoreSimpleResponseDto">
		select * from store join app_user on store.user_id = app_user.user_id join category on store.category_id = category.category_id
	</select>
	

	<select id="selectStore" parameterType="int" resultMap="summaryStoreResult">
		SELECT *
		FROM store
		LEFT JOIN app_user
		ON store.user_id = app_user.user_id
		LEFT JOIN category
		ON store.category_id = category.category_id
		WHERE store.store_id = #{storeId}
	</select>

	
	<select id="selectAverageRating" parameterType="int" resultType="float">
		SELECT AVG(rating) as rating_average FROM review WHERE store_id = #{storeId}
	</select>
	
	<select id="selectPopularStores" resultType="PopularStoreResponseDto">
	
		SELECT s.store_id, s.store_name, s.thumbnail, c.category_id, c.category_name, s.info, COUNT(r.review_id) AS review_count
		FROM store s
		JOIN review r ON s.store_id = r.store_id
		JOIN category c ON s.category_id = c.category_id
		GROUP BY s.store_id, s.store_name, c.category_id, c.category_name, s.info, s.thumbnail
		ORDER BY COUNT(r.review_id) DESC
		FETCH FIRST 10 ROWS ONLY
	</select>
	
	<select id="selectTodayOpenStores" resultMap="TodayOpenStoreResult">
		select * from store join category on store.category_id = category.category_id order by store_id 
	</select>
	
	<insert id="insertStore" parameterType="StoreDto" useGeneratedKeys="true" keyProperty="storeId" keyColumn="store_id">
		insert into store(store_name, user_id, address, position_x, position_y, isopen, category_id, created_type) values (#{storeName}, #{userId}, #{address}, #{positionX}, #{positionY}, #{isOpen}, #{categoryId}, #{createdType})
	</insert>
	


	<update id="insertMenus" parameterType="java.util.List">
	   insert INTO menu(store_id, menu_name, price, amount, thumbnail, isbest) 
	    <foreach collection="list" item="item" separator="UNION ALL">
	   	   select #{item.storeId}, #{item.menuName}, #{item.price}, #{item.amount}, #{item.thumbnail}, #{item.isBest} from DUAL
	  </foreach>
	</update>


	<update id="insertTags" parameterType="java.util.List">
	   insert INTO tag(store_id, tag_name) 
	    <foreach collection="list" item="item" separator="UNION ALL">
	   	   select #{item.storeId}, #{item.tagName} from DUAL
	  	</foreach>
	</update>

	<update id="insertOpenInfos" parameterType="java.util.List">
	   insert INTO open_info(store_id, day, open_time, close_time) 
	    <foreach collection="list" item="item" separator="UNION ALL">
	   	   select #{item.storeId}, #{item.day} , #{item.openTime}, #{item.closeTime} from DUAL
	  </foreach>
	</update>
	
	<insert id="insertStoreHistory" parameterType="StoreHistoryRequestDto">
		insert into store_history(store_id, address, position_x, position_y) 
		values (#{storeId}, #{address}, #{positionX}, #{positionY})
	</insert>
	
	
	<update id="updateStoreOpenStatus" parameterType="StoreHistoryRequestDto">
		update store SET 
			isopen = 1,
			position_x = #{positionX},
			position_y = #{positionY},
			address = #{address}
		WHERE store_id = #{storeId}
	</update>
	
	<update id="updateStoreCloseStatus" parameterType="int">
		update store SET isopen = 0  WHERE store_id = #{storeId}
	</update>

  	<select id="selectReviews" resultType="ReviewDto">
		SELECT * FROM reviews
	</select>

	<insert id="insertReview" parameterType="ReviewRequestDto">
		INSERT INTO
		review(user_id, store_id, content, rating)
		VALUES(#{userId},
		#{storeId}, #{content}, #{rating})
	</insert>

	<select id="selectStoreReviews" resultType="ReviewResponseDto"
		parameterType="int">
		SELECT u.user_name AS userName, r.content AS content,
		r.created_at AS createdAt, r.rating AS rating
		FROM review r
		JOIN app_user
		u
		ON r.user_id = u.user_id
		WHERE store_id = #{storeId}
	</select>

	<select id="selectCategoryStores"
		resultType="StoreSimpleResponseDto">
		SELECT
		s.position_x, s.position_y, s.store_id,
		s.isopen,
		s.store_name, s.category_id, c.category_name
		FROM store s
		JOIN category
		c
		ON s.category_id = c.category_id
		WHERE s.category_id = 1
	</select>

	<select id="selectTagStores" resultType="StoreSimpleResponseDto">
		SELECT *
		FROM store s
		JOIN tag t
		ON s.store_id = t.store_id
		WHERE t.tag_name = #{tagName}
	</select>
	
	<select id="selectStoreMypage" resultMap="MyPageStoreResult" parameterType="int">
		SELECT store_name, thumbNail, isopen, c.category_id, category_name, user_name, s.store_id
		FROM store s
		JOIN category c
		ON s.category_id = c.category_id 
		JOIN app_user u
		ON s.user_id = u.user_id
		WHERE s.store_id = ${storeId}
	</select>
	
	<select id="selectReviewCounting" parameterType="int" resultType="int">
		SELECT COUNT(review_id) as reviewNum FROM review WHERE store_id = #{storeId}
	</select>
	
	<select id="selectStoreModificationMyPage" parameterType="int" resultMap="ModificationStoreResult">
		SELECT store_id, store_name, address, position_x, position_y, created_type
		FROM store WHERE store_id = ${store_id}
	</select>
	
	<select id="selectOpenInfosForModification" parameterType="int" resultType="OpenInfo">
	   SELECT *
	   FROM open_info
	   WHERE store_id = #{storeID} 
	</select>
  
	<select id="selectFilterStores" parameterType="String" resultType="StoreSimpleResponseDto">
		select * from (
		    select s.store_id ab, listagg(tag_name, '') within group(order by tag_name) as tn
		    from store s
		    join tag t
		    on s.store_id = t.store_id
		    group by s.store_id
		) a
		join store s
		on s.store_id = a.ab
		join category c
		on s.category_id = c.category_id
		where concat(tn, c.category_name) like '%'|| #{searchFilter} ||'%'
	</select>
	
</mapper>
